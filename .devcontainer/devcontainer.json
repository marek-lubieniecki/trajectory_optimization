{
    "name": "Trajectory Optimization",
    "image": "mcr.microsoft.com/devcontainers/python:1-3.11-bullseye",
    // Features to add to the dev container
    "features": {
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/common-utils:2": {
            "installZsh": true,
            "configureZshAsDefaultShell": true,
            "installOhMyZsh": true,
            "upgradePackages": true
        }
    },
    // Configure tool-specific properties
    "customizations": {
        "vscode": {
            "settings": {
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": true,
                "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
                "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
                "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
                "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
                "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
                "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
                "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
                "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
                "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
                "python.testing.pytestPath": "/usr/local/py-utils/bin/pytest",
                "files.watcherExclude": {
                    "**/node_modules/**": true
                },
                "terminal.integrated.defaultProfile.linux": "zsh"
            },
            // Add VS Code extensions
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-python.flake8",
                "ms-python.black-formatter",
                "ms-vscode.vscode-json",
                "redhat.vscode-yaml",
                "ms-vscode.cmake-tools",
                "twxs.cmake",
                "formulahendry.code-runner",
                "streetsidesoftware.code-spell-checker",
                "ms-python.autopep8",
                "njpwerner.autodocstring",
                "ms-vscode.sublime-keybindings"
            ]
        }
    },
    // Use 'forwardPorts' to make a list of ports inside the container available locally
    "forwardPorts": [
        8888,
        8000
    ],
    // Use 'postCreateCommand' to run commands after the container is created
    "postCreateCommand": "pip install --user -r requirements-dev.txt",
    // Configure remoteUser
    "remoteUser": "vscode",
    // Mount the local workspace folder
    "workspaceFolder": "/workspace",
    "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
    // Additional container arguments for better performance and X11 forwarding
    "runArgs": [
        "--cap-add=SYS_PTRACE",
        "--security-opt",
        "seccomp=unconfined",
        "--network=host",
        "-e",
        "DISPLAY=${localEnv:DISPLAY}",
        "-v",
        "/tmp/.X11-unix:/tmp/.X11-unix:rw"
    ],
    // Environment variables
    "containerEnv": {
        "DISPLAY": "${localEnv:DISPLAY}",
        "MPLBACKEND": "TkAgg"
    },
    // Lifecycle scripts
    "initializeCommand": "echo 'Initializing trajectory optimization dev container...'",
    "onCreateCommand": [
        "sudo apt-get update",
        "sudo apt-get install -y pkg-config build-essential gfortran libopenblas-dev liblapack-dev",
        "sudo apt-get install -y coinor-libipopt-dev",
        "sudo apt-get install -y libx11-dev xvfb python3-tk x11-apps xauth"
    ],
    "updateContentCommand": "pip install --user -r requirements-dev.txt",
    "postStartCommand": "echo 'Container ready for trajectory optimization development!'"
}